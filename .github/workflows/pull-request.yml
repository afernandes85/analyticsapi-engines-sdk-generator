name: Generate SDKs and raise PRs in individual language repositories

env:
  USER_API_KEY: ${{ secrets.USER_API_KEY }}
  USER_EMAIL: ${{ secrets.USER_EMAIL }}
  USER: ${{ secrets.USER }}
  OPENAPI_GENERATOR_VERSION: 4.3.1
  GITHUB_DOTNET_SDK_REPO: afernandes85/analyticsapi-engines-dotnet-sdk
  GITHUB_PYTHON_SDK_REPO: afernandes85/analyticsapi-engines-python-sdk
  GITHUB_JAVA_SDK_REPO: afernandes85/analyticsapi-engines-java-sdk
  GITHUB_R_SDK_REPO: afernandes85/analyticsapi-engines-r-sdk
  
on:
  pull_request:
    branches: [ master ]

jobs:
  dotnet:
    runs-on: ubuntu-latest

    steps:
      - name: Check out SDK repository
        if: env.GITHUB_DOTNET_SDK_REPO
        uses: actions/checkout@v2
        with:
          repository: ${{ env.GITHUB_DOTNET_SDK_REPO }}
          path: sdk
          fetch-depth: 0
          token: ${{ env.USER_API_KEY }}

      - name: Check out Generator repository
        if: env.GITHUB_DOTNET_SDK_REPO
        uses: actions/checkout@v2
        with:
          path: generator

      - name: Generate SDK
        if: env.GITHUB_DOTNET_SDK_REPO
        run: generator/.github/scripts/generate-sdk.sh $OPENAPI_GENERATOR_VERSION dotnet CustomCSharpNetCoreClientCodegen

      - name: Raise pull request on SDK repository
        if: env.GITHUB_DOTNET_SDK_REPO
        run: generator/.github/scripts/raise-pull-request.sh dotnet
  
  python:
    runs-on: ubuntu-latest

    steps:
      - name: Check out SDK repository
        if: env.GITHUB_PYTHON_SDK_REPO
        uses: actions/checkout@v2
        with:
          repository: ${{ env.GITHUB_PYTHON_SDK_REPO }}
          path: sdk
          fetch-depth: 0
          token: ${{ env.USER_API_KEY }}

      - name: Check out Generator repository
        if: env.GITHUB_PYTHON_SDK_REPO
        uses: actions/checkout@v2
        with:
          path: generator

      - name: Generate SDK
        if: env.GITHUB_PYTHON_SDK_REPO
        run: generator/.github/scripts/generate-sdk.sh $OPENAPI_GENERATOR_VERSION python CustomPythonClientCodegen
      
      - name: Raise pull request on SDK repository
        if: env.GITHUB_PYTHON_SDK_REPO
        run: generator/.github/scripts/raise-pull-request.sh python

  java:
    runs-on: ubuntu-latest

    steps:
      - name: Check out SDK repository
        if: env.GITHUB_JAVA_SDK_REPO
        uses: actions/checkout@v2
        with:
          repository: ${{ env.GITHUB_JAVA_SDK_REPO }}
          path: sdk
          fetch-depth: 0
          token: ${{ env.USER_API_KEY }}

      - name: Check out Generator repository
        if: env.GITHUB_JAVA_SDK_REPO
        uses: actions/checkout@v2
        with:
          path: generator

      - name: Generate SDK
        if: env.GITHUB_JAVA_SDK_REPO
        run: generator/.github/scripts/generate-sdk.sh $OPENAPI_GENERATOR_VERSION java CustomJavaClientCodegen
      
      - name: Raise pull request on SDK repository
        if: env.GITHUB_JAVA_SDK_REPO
        run: generator/.github/scripts/raise-pull-request.sh java

  r:
    runs-on: ubuntu-latest

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"

    steps:
      - name: Check out SDK repository
        if: env.GITHUB_R_SDK_REPO
        uses: actions/checkout@v2
        with:
          repository: ${{ env.GITHUB_R_SDK_REPO }}
          path: sdk
          fetch-depth: 0
          token: ${{ env.USER_API_KEY }}

      - name: Check out Generator repository
        if: env.GITHUB_R_SDK_REPO
        uses: actions/checkout@v2
        with:
          path: generator

      - name: Generate SDK
        if: env.GITHUB_R_SDK_REPO
        run: generator/.github/scripts/generate-sdk.sh $OPENAPI_GENERATOR_VERSION r CustomRClientCodegen
      
      - name: Set up R
        if: env.GITHUB_R_SDK_REPO
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: '3.5.3'
      
      # - name: Build and install new SDK
      #   run: R CMD build ${GITHUB_WORKSPACE}/generator/languages/r/sdk

      # - name: Query dependencies
      #   run: |
      #     install.packages('remotes')
      #     saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
      #     writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
      #   shell: Rscript {0}
      #   working-directory: ${GITHUB_WORKSPACE}/generator/languages/r/sdk

      # - name: Cache R packages
      #   if: runner.os != 'Windows'
      #   uses: actions/cache@v2
      #   with:
      #     path: ${{ env.R_LIBS_USER }}
      #     key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
      #     restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      # - name: Install system dependencies
      #   if: runner.os == 'Linux'
      #   run: |
      #     cd ${GITHUB_WORKSPACE}/generator/languages/r/sdk
      #     while read -r cmd
      #     do
      #       eval sudo $cmd
      #     done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Generate docs
        if: env.GITHUB_R_SDK_REPO
        # continue-on-error: true
        run: |
          cd ${GITHUB_WORKSPACE}/generator/languages/r/sdk
          sudo apt-get -y install libcurl4-gnutls-dev
          sudo Rscript -e "install.packages('jsonlite', repos = 'http://cran.us.r-project.org')"
          sudo Rscript -e "install.packages('httr', repos = 'http://cran.us.r-project.org')"
          sudo Rscript -e "install.packages('base64enc', repos = 'http://cran.us.r-project.org')"
          sudo Rscript -e "install.packages('factset.protobuf.stach', repos = 'http://cran.us.r-project.org')"
          sudo Rscript -e "install.packages('roxygen2', repos = 'http://cran.us.r-project.org')"
          cd ..
          sudo Rscript -e "roxygen2::roxygenize(roclets = c('rd', 'namespace'), package.dir = 'sdk')"
      
      - name: Raise pull request on SDK repository
        if: env.GITHUB_R_SDK_REPO
        run: generator/.github/scripts/raise-pull-request.sh r
