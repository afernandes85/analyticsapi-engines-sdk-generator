name: Generate SDKs and create PRs for individual language repositories

env:
  USER_API_KEY: ${{ secrets.USER_API_KEY }}
  USER_EMAIL: ${{ secrets.USER_EMAIL }}
  USER: ${{ secrets.USER }}

on:
  pull_request:
    branches: [ master ]

jobs:
  dotnet:
    runs-on: ubuntu-latest

    steps:
      - name: Install Hub
        run: sudo snap install hub --classic
    
      - name: Check out Analytics API dotnet SDK
        uses: actions/checkout@v2
        with:
          repository: afernandes85/analyticsapi-engines-dotnet-sdk
          path: sdk
          fetch-depth: 0
          token: ${USER_API_KEY}

      - name: Check out Analytics API SDK Generator
        uses: actions/checkout@v2
        with:
          repository: afernandes85/analyticsapi-engines-sdk-generator
          path: generator
          fetch-depth: 0

      - name: Build the Docker image
        run: |
          docker build --build-arg VERSION=4.2.2 \
          -t openapi-generator-cli-custom \
          -f ${GITHUB_WORKSPACE}/generator/openapi-generator/Dockerfile \
          ${GITHUB_WORKSPACE}/generator/openapi-generator

      - name: Generate new SDK using Open API Generator Custom Docker image
        run: |
          docker run --rm -v ${GITHUB_WORKSPACE}/generator:/generator \
          openapi-generator-cli-custom generate \
          --generator-name CustomCSharpNetCoreClientCodegen \
          --input-spec /generator/openapi-schema.json \
          --output /generator/languages/dotnet/sdk \
          --config /generator/languages/dotnet/openapi-generator-config.json \
          --template-dir /generator/languages/dotnet/templates \
          --skip-validate-spec

      # - name: Build new SDK
      #   run: docker run --rm -v ${GITHUB_WORKSPACE}/generator/languages/dotnet/sdk:/app -w /app mcr.microsoft.com/dotnet/core/sdk:2.2 dotnet build -c release
      
      - name: Raise pull request
        run: |
          version=$(grep -Po '"packageVersion":.*?[^\\]",' generator/languages/dotnet/openapi-generator-config.json | cut -c20-24)
          pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          
          cd sdk

          git config user.email "$USER_EMAIL"
          git config user.name "$USER"
          
          branch_name="feat/sdk/generator-pr-$pr_number"
          remote_branch_check=$(git ls-remote --heads origin $branch_name)

          if [ -z "$remote_branch_check" ]
          then
            echo "new branch"
            git checkout -b $branch_name
            rm -r Engines
            cp -r ../generator/languages/dotnet/sdk Engines
            git status
            git add -A .
            git commit -m "feat(sdk): Auto-commit by Generator PR $pr_number for SDK version v$version"
            echo "Committed all the changes"
            
            git push origin $branch_name
            echo "Pushed all the changes to remote location"
            
            export GITHUB_USER=$USER
            export GITHUB_TOKEN=$USER_API_KEY
            hub pull-request -m "feat(sdk): Auto-created by Generator PR $pr_number" -h $branch_name
          else
            echo "branch exists"
            git checkout $branch_name
            git pull
            rm -r Engines
            cp -r ../generator/languages/dotnet/sdk Engines
            git status
            if git diff-index --quiet HEAD -- 
            then 
              echo "No changes to commit." 
            else 
              git add -A .
              git commit -m "feat(sdk): Auto-commit by Generator PR $pr_number for SDK version v$version"
              echo "Committed all the changes"
            
              git push origin $branch_name
              echo "Pushed all the changes to remote location"
            fi
          fi         
  
  python:
    runs-on: ubuntu-latest

    steps:
      - name: Install Hub
        run: sudo snap install hub --classic
    
      - name: Check out Analytics API python SDK
        uses: actions/checkout@v2
        with:
          repository: afernandes85/analyticsapi-engines-python-sdk
          path: sdk
          fetch-depth: 0
          token: ${USER_API_KEY}

      - name: Check out Analytics API SDK Generator
        uses: actions/checkout@v2
        with:
          repository: afernandes85/analyticsapi-engines-sdk-generator
          path: generator
          fetch-depth: 0

      - name: Build the Docker image
        run: |
          docker build --build-arg VERSION=4.2.2 \
          -t openapi-generator-cli-custom \
          -f ${GITHUB_WORKSPACE}/generator/openapi-generator/Dockerfile \
          ${GITHUB_WORKSPACE}/generator/openapi-generator

      - name: Generate new SDK using Open API Generator Custom Docker image
        run: |
          docker run --rm -v ${GITHUB_WORKSPACE}/generator:/generator \
          openapi-generator-cli-custom generate \
          --generator-name CustomPythonClientCodegen \
          --input-spec /generator/openapi-schema.json \
          --output /generator/languages/python/sdk \
          --config /generator/languages/python/openapi-generator-config.json \
          --template-dir /generator/languages/python/templates \
          --skip-validate-spec

      # - name: Build new SDK
      #   run: docker run --rm -v ${GITHUB_WORKSPACE}/sdk/Engines:/app -w /app mcr.microsoft.com/dotnet/core/sdk:2.2 dotnet build -c release
      
      - name: Raise pull request
        run: |
          version=$(grep -Po '"packageVersion":.*?[^\\]",' generator/languages/python/openapi-generator-config.json | cut -c20-24)
          pr_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          
          cd sdk
          
          git config user.email "$USER_EMAIL"
          git config user.name "$USER"

          branch_name="feat/sdk/generator-pr-$pr_number"
          remote_branch_check=$(git ls-remote --heads origin $branch_name)

          if [ -z "$remote_branch_check" ]
          then
            echo "new branch"
            git checkout -b $branch_name
            rm -r fds.analyticsapi.engines
            cp -r ../generator/languages/python/sdk fds.analyticsapi.engines
            git status
            git add -A .
            git commit -m "feat(sdk): Auto-commit by Generator PR $pr_number for SDK version v$version"
            echo "Committed all the changes"
            
            git push origin $branch_name
            echo "Pushed all the changes to remote location"
            
            export GITHUB_USER=$USER
            export GITHUB_TOKEN=$USER_API_KEY
            hub pull-request -m "feat(sdk): Auto-created by Generator PR $pr_number" -h $branch_name
          else
            echo "branch exists"
            git checkout $branch_name
            git pull
            rm -r fds.analyticsapi.engines
            cp -r ../generator/languages/python/sdk fds.analyticsapi.engines 
            git status
            if git diff-index --quiet HEAD -- 
            then 
              echo "No changes to commit." 
            else
              git add -A .
              git commit -m "feat(sdk): Auto-commit by Generator PR $pr_number for SDK version v$version"
              echo "Committed all the changes"
              
              git push origin $branch_name
              echo "Pushed all the changes to remote location"
            fi
          fi

